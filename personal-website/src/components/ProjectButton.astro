---
import type { ImageMetadata } from "astro";
import { ViewTransitions } from "astro:transitions";
import { Image } from "astro:assets";

const { href, title, description, scopes, altText, imgPath } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
    "../assets/images/*"
);
if (!images[imgPath])
    throw new Error(
        `"${imgPath}" does not exist in glob: "../assets/images/*"`,
    );
---
<head>
    <ViewTransitions />
</head>

<project-button class="button-wrap" data-imgpath={imgPath}>
    <a href={href}>
        <div class="button menu md:flex md:items-end sm:justify-between">
            <div class="description-wrap flex flex-col justify-between pb-4">
                <div class="project-description mt-8 pb-3 md:text-base">
                    {description}
                </div>
                <div class="project-title">{title}</div>
            </div>
            <div class="project-scope flex pb-2">
                {
                scopes.map((scope,index) => (
                index == (scopes.length - 1) ?
                <div class="content-center w-max">{scope}</div> : 
                <div class="content-center w-max">{scope}</div> <span class="px-2 content-center">&#47;</span>
                ))                
                } 
            </div>
        </div>
        <div class="img-desktop hidden md:block">
            <div class="img-wrap">
                <Image src={images[imgPath]()} alt={altText} class="image"/>
            </div>
        </div>
        <div class="img-mobile md:hidden mt-4">
            <Image src={images[imgPath]()} alt={altText} class="image"/>
        </div>
        <div></div>
    </a>
</project-button>

<script>
    class ProjectButton extends HTMLElement {
       constructor() {
           super();

           const imgPath = this.dataset.imgpath;
           const button = this.querySelector('a');
           const target = this.querySelector('.img-wrap');

           // Referenced ChatGPT to calculation the math of adjusted mouse positino due to page scroll 
           function follow(e) {
               target.style.left = `${e.pageX + 24}px`;
               target.style.top = `${e.pageY - window.scrollY - 0.5*target.scrollHeight}px`;
            }

           target.style.transition = 'filter 400ms ease-out, visibility 100ms linear';
           target.style.filter = 'saturate(0%) contrast(50%)';
           
           button.addEventListener('mouseenter', () => {
               target.style.display="block";
               target.style.visibility = 'visible';
               setTimeout(() => {
                    target.style.filter = 'saturate(100%) contrast(100%)'; 
               }, 1);
               document.addEventListener('mousemove', follow);
            });

            button.addEventListener('mouseleave', () => {
                target.style.visibility = 'hidden';
                target.style.filter = 'saturate(0%) contrast(50%)';
            });
           
       }
   }       

   customElements.define('project-button', ProjectButton);
</script>

<style>
    .button-wrap {
        width: 100%;
        font-family: "TT Fors";
        height: max-content;
    }

    .button:last-child {
        border-bottom: none;
    }

    .button {
        height: max-content;
    }

    .project-title {
        font-family: "LT Cushion";
        font-weight: 300;
        font-style: normal;
        line-height: 1;
        transform: scaleY(1.05);
        transform-origin: 0 0;
        font-size: 1.6rem;
        transition: font-size 250ms ease-in-out;
    }

    .description-wrap {
        height: 100%;
    }

    .project-description {
        font-family: "TT Fors";
        text-transform: uppercase;
        line-height: 1.1;
        font-weight: 450;
        transform-origin: 0 0;
        letter-spacing: -0.03rem;
    }

    .project-scope {
        text-transform: uppercase;
        transform: scaleY(1.1);
        transform-origin: 0 0;
        font-size: 0.7rem;
        letter-spacing: -0.02rem;
        font-weight: 500;
        line-height: 110%;
    }

    .img-wrap {
        position: fixed;
		text-align: center;
        display: none;
		z-index: 99;
        pointer-events: none;
    }

    .image{
		object-fit: cover;
        border-bottom: 1.5px solid var(--color-border-secondary);
        padding-bottom: 1rem;
    }

    a {
        border-bottom: 1.5px solid var(--color-border-secondary);
    }

    @media screen and (min-width: 768px) {
        .project-title{
        font-size: clamp(2.5rem, 5vw, 3.2rem);
        letter-spacing: -0.05rem;
        }

        .button {
        padding: 0.5rem 0 0.5rem 3rem;
        border-bottom: 1.5px solid var( --color-border-secondary);
        }

        .image {
        border-bottom: none;
        padding-bottom: 0;
        width: 40vw;
        min-width: 200px;
        max-width: 1400px;
        }
    }
    
    @media screen and (min-width: 1024px) {
        .button {
        padding: 0.5rem 0 0.5rem 6rem;
        }
    }
</style>
